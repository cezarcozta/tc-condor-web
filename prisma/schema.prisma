datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/db/generated/"
}

enum UserRole {
  PATIENT
  DOCTOR
}

model User {
  id            Int            @id @default(autoincrement())
  externalId    String         @unique @default(cuid())
  email         String         @unique
  name          String?
  emailVerified DateTime?
  image         String?
  role          UserRole?
  accounts      Account[]
  sleepEntries  SleepEntries[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, name, email])
  @@map("users")
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_token")
}

model SleepEntries {
  id                     Int     @id @default(autoincrement())
  externalId             String  @unique @default(cuid())
  userId                 Int
  sleepDurationInMinutes Int
  timeToBed              String
  wakesUp                Int
  tookMedication         Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@map("sleep_entries")
}
